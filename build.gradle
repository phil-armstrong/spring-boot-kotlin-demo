buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id("org.jetbrains.kotlin.jvm") version "1.1.4-3"
    id("org.jetbrains.kotlin.plugin.spring") version "1.1.4-3"
    id("org.jetbrains.kotlin.plugin.noarg") version "1.1.4-3"
    id("org.springframework.boot") version "1.5.6.RELEASE"
    id("com.moowork.node") version "1.2.0"
}

node {
    nodeModulesDir = file("frontend")
}

version = "0.0.1-SNAPSHOT"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.h2database:h2")
    compile("org.jetbrains.kotlin:kotlin-stdlib")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin")
    compile("org.apache.solr:solr-solrj:6.3.0")
    compile("org.postgresql:postgresql:9.4-1201-jdbc4")

    testCompile("org.springframework.boot:spring-boot-starter-test")
}


bootRun {
    addResources = true
}

task buildClient(type: NpmTask, dependsOn: 'npmInstall') {
    group = 'build'
    description = "Compile client side folder for production"
    args = ['run', 'buildDev']
}

task buildClientDev(type: NpmTask, dependsOn: 'npmInstall') {
    description = 'Compile client side folder for development'
    args = ['run', 'buildDev']
}

bootRun.dependsOn(buildClientDev)
jar.dependsOn(buildClient)